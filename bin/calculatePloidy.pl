#!/usr/bin/perl

use ApiCommonData::Load::CalculationsForCNVs;
use strict;
use warnings;
use Getopt::Long;
use Data::Dumper;

# get parameter values
my $ploidy = 2;
my ($outputDir, $fpkm, $sampleName, $taxonId, $geneFootprintFile, $chrsForCalcFile);

&GetOptions("outputDir|o=s" => \$outputDir,
            "fpkmFile|f=s" => \$fpkm,
            "ploidy|p=i" => \$ploidy,
            "sampleName|s=s" => \$sampleName,
            "taxonId|s=i" => \$taxonId,
            "geneFootprints|f=s" => \$geneFootprintFile,
            "chrsForCalcsFile=s" => \$chrsForCalcFile	    
            );

&usage() unless ($outputDir && $fpkm && $sampleName && $taxonId && $geneFootprintFile);

die "File of gene footprints $geneFootprintFile not found\n" unless (-e $geneFootprintFile);

die "File of FPKM values $fpkm not found\n" unless (-e $fpkm); 

my $chrPloidies = &calculateChrPloidies($geneFootprintFile, $fpkm, $ploidy, $taxonId, $chrsForCalcFile);

open (OUT, ">$outputDir/$sampleName\_Ploidy.txt") or die "Cannot open $outputDir/$sampleName\_Ploidy.tsv for writing\n$!\n";
printf OUT "na_sequence_id\tchr_copy_number\n";
foreach my $chr (keys %{$chrPloidies}) {
    printf OUT "%s\t%d\n", $chr, $chrPloidies->{$chr};
}
close OUT;

sub calculateChrPloidies {
    my ($geneFootprintFile, $fpkmFile, $ploidy, $taxonId, $chrsForCalcFile) = @_;
    my $chrs = getChrsForCalcs($chrsForCalcFile, $taxonId);
    my $geneData = ApiCommonData::Load::CalculationsForCNVs::getGeneInfo($geneFootprintFile, $chrs);
    my $chrValues = ApiCommonData::Load::CalculationsForCNVs::getChrFPKMVals($fpkmFile, $chrs, $geneData);
    my $chrMedians = ApiCommonData::Load::CalculationsForCNVs::getChrMedians($chrValues, $chrs);
    my $allChrMedian = ApiCommonData::Load::CalculationsForCNVs::getMedianAcrossChrs($chrValues, $chrs);
    my $chrPloidies = ApiCommonData::Load::CalculationsForCNVs::getChrPloidies ($chrMedians, $allChrMedian, $ploidy, $chrs);
    return $chrPloidies;
}

sub getChrsForCalcs {
    my ($file, $taxonId) = @_;
    my $chrs = {};
    open(my $data, '<', $file) || die "Could not open file $file: $!";
    while (my $line = <$data>) {
      chomp $line;
      my ($sourceId) = split(/\t/, $line);
      $chrs->{$sourceId} = 0;
    }
    die "ERROR:\tThe organism with taxon id $taxonId does not have any sequences annotated with the SO term \"chromosome\".
         We cannot calculate copy number variations for this organism.\n\nDATA LOADERS: Please undo this dataset and remove the dataset class.\n"
         unless scalar keys %$chrs > 0;
    close $data;
    return $chrs;
}

sub usage {
    print STDERR "calculatePloidy --outputDir=s <dir to write output> --fpkm File=s <full path to genes.fpkm_tracking file generated by Cufflinks> --sampleName=s <sampleName used to name output files> --taxonId <taxonId for organism> --geneFootprints <gene footprint file> [--ploidy=i <base ploidy> (expected ploidy for the majority of chromosomes - default is 2)]\n";
    exit;
}
exit;
