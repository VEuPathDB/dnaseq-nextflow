profiles {

  //--------------------------------------------------------------------------------------------
  // Diploid (processSingleExperiment)
  //--------------------------------------------------------------------------------------------

  diploid {

    params {
      inputDir = "$launchDir/data/diploid_paired/chr1"
      fromBAM = false
      hisat2Threads = 4
      isPaired = true
      genomeFastaFile = "$launchDir/data/genome_diploid/chr1/genome.fa.gz"
      gtfFile = "$launchDir/data/cnvInputFiles_diploid/lmajF_chr1.gtf"
      footprintFile = "$launchDir/data/cnvInputFiles_diploid/lmajF_geneFootprints_chr1.txt"
      winLen = 1000
      ploidy=2
      minCoverage = 5
      //hisat2Index = "$launchDir/data/genome_haploid_index/premade_index";
      hisat2Index = "NA";
      createIndex = true
      outputDir = "$launchDir/results"
      trimmomaticAdaptorsFile = "$launchDir/data/trimmomatic_adaptors/All_adaptors-PE.fa"
      varscanPValue = 0.01
      //TODO check settings for these in existing workflow
      varscanMinVarFreqSnp = 0.2
      varscanMinVarFreqCons = 0.2
      maxNumberOfReads = 15000000
      gatkJar = "NA"
      picardJar = "NA"
      varscanJar = "NA"
    }

    docker {
      enabled = true
      runOptions = '--user root'
    }

  }

  //--------------------------------------------------------------------------------------------
  // Haploid (processSingleExperiment)
  //--------------------------------------------------------------------------------------------

  haploid {

    params {
      inputDir = "$baseDir/data/haploid_paired/chr1"
      fromBAM = true
      hisat2Threads = 4
      isPaired = true
      minCoverage = 5
      genomeFastaFile = "$baseDir/data/genome_haploid/genome.fa"
      gtfFile = "$baseDir/data/cnvInputFiles_haploid/genes.gtf"
      footprintFile = "$baseDir/data/cnvInputFiles_haploid/geneFootprints.txt"
      winLen = 1000
      ploidy=1
      // there will be many files here.  
      //hisat2Index = "$baseDir/data/genome_haploid_index/premade_index";
      hisat2Index = "NA";
      createIndex = true
      outputDir = "$launchDir/output"
      trimmomaticAdaptorsFile = "$baseDir/data/trimmomatic_adaptors/All_adaptors-PE.fa"
      varscanPValue = 0.01
      //TODO needs changing for diploid+ organisms
      varscanMinVarFreqSnp = 0.8
      varscanMinVarFreqCons = 0.8
      maxNumberOfReads = 200000
      gatkJar = "NA"
      picardJar = "NA"
      varscanJar = "NA"
    }

    docker {
      enabled = true
      runOptions = '--user root'
    }

    singularity {
      enabled = false
    }

  }

  //--------------------------------------------------------------------------------------------
  // loadCNV
  //--------------------------------------------------------------------------------------------

  loadCNV {

    params {
      inputDir = "$launchDir/results/"
      outputDir = "$launchDir/output"
      gusConfig = "$launchDir/data/merge_setup/gusConfig.txt"
      footprintFile = "$launchDir/data/cnvInputFiles_diploid/lmajF_geneFootprints_chr1.txt"
      ploidy = 2
      taxonId = "1577702"
    }

    docker {
      enabled = true
      runOptions = "--network host"
    }

  }

  //--------------------------------------------------------------------------------------------
  // loadSingleExperiment
  //--------------------------------------------------------------------------------------------

  loadSingleExperiment {

    params {
      inputDir = "$launchDir/results/"
      extDbRlsSpec = 'RDEMKO_TEST|dontcare'
      genomeExtDbRlsSpec = "lmajFriedlin_primary_genome_RSRC|2016-05-28"
      webServicesDir = "$launchDir/webservices" 
    }

  }

  //--------------------------------------------------------------------------------------------
  // mergeExperiments
  //--------------------------------------------------------------------------------------------

  mergeExperiments {

    params {
      fastaDir = "$launchDir/data/fastas/"
      vcfDir = "$launchDir/data/vcfs/"
      outputDir = "$launchDir/output"
      makepositionarraycoding = "$launchDir/bin/makepositionarraycoding.pl"
      gusConfig = "$launchDir/data/merge_setup/gusConfig.txt"
      cacheFile = "$launchDir/data/merge_setup/cache.txt"
      undoneStrains = "$launchDir/data/merge_setup/undoneStrains.txt"
      genomeExtDbRlsSpec = '"lmajFriedlin_primary_genome_RSRC|2016-05-28"'
      organism_abbrev = 'lmajFriedlin' 
      reference_strain = 'Friedlin'
      extDbRlsSpec = '"lmajFriedlin_NGS_SNPsAndVariations|do_not_care"'
      varscan_directory = "$launchDir/data/merge_setup/varscanCons/"
      genomeFastaFile = "$launchDir/data/genome_diploid/chr1/genome.fa.gz"
      gtfFile = "$launchDir/data/cnvInputFiles_diploid/lmajF_chr1.gtf"
    }

    process {

      withName: 'snpEff' {
        container = 'veupathdb/dnaseqanalysis'
      }

      withName: 'checkUniqueIds' {
        container = 'veupathdb/dnaseqanalysis'
      }

      withName: 'mergeVcfs' {
        container = 'veupathdb/dnaseqanalysis'
      }

      withName: 'makeSnpFile' {
        container = 'veupathdb/dnaseqanalysis'
      }

      withName: 'processSeqVars' {
        container = 'veupathdb/dnaseqanalysis'
      }

    }

    docker {
      enabled = true
      runOptions = "-v /home/rdemko/workspace/djob/veupathdb/dnaseqAnalysis/hold/new/gus.config:/gusApp/gus_home/config/gus.config  --network host" 
    }

  }

  //--------------------------------------------------------------------------------------------
  // tests
  //--------------------------------------------------------------------------------------------

  tests {

    params {
      testDir = '/home/rdemko/workspace/djob/dnaseqAnalysis/testing/t/'
      outputDir = '/home/rdemko/workspace/djob/dnaseqAnalysis/output/'
    }

    docker {
      enabled = true
    }

  }
  
}